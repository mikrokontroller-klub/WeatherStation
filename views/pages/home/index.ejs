<%- contentFor('content') %>
<div class="row">
    <% lastMeasurements.forEach(sensor => { %>
    <div class="col-lg-4 col-md-6 col-sm-6">
        <div class="card card-stats">
            <div class="card-body">
                <div class="row">
                    <div class="col-5 col-md-4">
                        <div class="icon-big text-center icon-warning">
                            <i class="<%= sensor.icon.name + " text-" + sensor.icon.color%>"></i>
                        </div>
                    </div>
                    <div class="col-7 col-md-8">
                        <div class="numbers">
                            <p class="card-category"><%= sensor.name %></p>
                            <p class="card-title"><%= sensor.measurement.data + " " + sensor.measurement.unitPostfix %></p>
                            <p></p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <hr />
                <div class="stats">
                    <i class="fa fa-clock-o"></i>
                    Last updated: <%= moment(sensor.measurement.measuredAt).fromNow() %>
                </div>
            </div>
        </div>
    </div>
    <% }) %>
</div>
<div class="row">
    <% sensorMeasurements.forEach(sensor => { %>
    <div class="col-lg-6 col-sm-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-sm-10">
                        <div class="numbers pull-left"><%= sensor.name %></div>
                    </div>
                    <div class="col-sm-2">
                        <div class="pull-right">
                            <span class="badge badge-pill badge-<%= sensor.color %>"> <%= sensor.type %> </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <canvas id="chart-<%= sensor.id %>"></canvas>
            </div>
            <div class="card-footer">
                <hr />
                <div class="row">
                    <div class="col-sm-7">
                        <div class="footer-title">Last 7 days</div>
                    </div>
                    <div class="col-sm-5">
                        <div class="pull-right">
                            <a href="/sensors/<%= sensor.id %>" class="btn btn-<%= sensor.color %> btn-sm">Details</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <% }) %>
</div>

<%- contentFor('css') %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="sha512-1ycn6IcaQQ40/MKBW2W4Rhis/DbILU74C1vSrLJxCq57o941Ym01SwNsOMqvEBFlcgUa6xLiPY/NS5R+E6ztJQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<%- contentFor('js') %>
<script>
    chartColor = '#FFFFFF';

    //TODO: Replace this with API call
    let sensorMeasurements = <%- JSON.stringify(sensorMeasurements) %>

    sensorMeasurements.forEach(sensor => {
        ctx = document.getElementById(`chart-${sensor.id}`).getContext('2d');
        new Chart(ctx, {
            type: 'line',

            data: {
                labels: sensor.measurements.labels,
                datasets: [
                    {
                        borderColor: getComputedStyle(document.documentElement).getPropertyValue(`--${sensor.color}`),
                        backgroundColor: 'transparent',
                        pointRadius: 0,
                        pointHoverRadius: 0,
                        borderWidth: 3,
                        data: sensor.measurements.data,
                    },
                ],
            },
            options: {
                legend: {
                    display: false,
                },

                tooltips: {
                    enabled: true,
                },

                scales: {
                    yAxes: [
                        {
                            ticks: {
                                fontColor: '#9f9f9f',
                                beginAtZero: false,
                                maxTicksLimit: 5,
                                //padding: 20
                            },
                            gridLines: {
                                drawBorder: false,
                                zeroLineColor: '#ccc',
                                color: 'rgba(255,255,255,0.05)',
                            },
                        },
                    ],

                    xAxes: [
                        {
                            barPercentage: 1.6,
                            gridLines: {
                                drawBorder: true,
                                color: 'rgba(255,255,255,0.1)',
                                display: true,
                            },
                            ticks: {
                                padding: 20,
                                fontColor: '#9f9f9f',
                            },
                        },
                    ],
                },
            },
        });
    });
</script>